server.port=8880

#spring.datasource.url=jdbc:postgresql://localhost:5432/naea
#spring.datasource.username=postgres
#spring.datasource.password=postgres

spring.datasource.url=jdbc:postgresql://postgres:5432/naea
spring.datasource.username=pX89LxzsR
spring.datasource.password=Psj1V1mep

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.enable_lazy_load_no_trans: true

spring.data.rest.base-path=/api/v2
server.servlet.context-path=/sigequi
server.servlet.session.timeout=15m

# max file size
spring.servlet.multipart.max-file-size=10MB
# max request size
spring.servlet.multipart.max-request-size=10MB
# files storage location (stores all files uploaded via REST API)
image.path = /uploads
#image.path = src/main/resources/static/img/users

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
